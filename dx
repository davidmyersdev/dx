#!/usr/bin/env bash

exit_with_usage () {
  cat << USAGE
Usage
    `basename $0` [-hs][-i <image>] <command>

Options
    -h          show usage info
    -i <image>  specify a docker image to use (e.g. node:lts-alpine)
    -s          launch an interactive shell

Examples
    `basename $0` npx cowsay hello
    `basename $0` bundle exec rails c
    `basename $0` -i node:lts-alpine npm init
    `basename $0` -s ruby
USAGE
  exit 0
}

while getopts ':his' opt
do
  case $opt in
    h)
      exit_with_usage
      ;;
    i)
      shift
      image="$1"
      shift
      ;;
    s)
      shift
      shell=1
      ;;
  esac
done

# handle commands
command="$1"

# show usage if no command is supplied
if [ -z "$command" ]
then
  exit_with_usage
fi

# if no image is supplied, look for one that is supported
if [ -z "$image" ]
then
  # node
  if [[ " node npm npx yarn " =~ " $command " ]]
  then
    image="node:lts-alpine"
  fi

  # php
  if [[ " php composer " =~ " $command " ]]
  then
    image="composer:2"
  fi

  # python
  if [[ " python pip " =~ " $command " ]]
  then
    image="python:alpine"
  fi

  # ruby
  if [[ " ruby bundle bundler gem irb " =~ " $command " ]]
  then
    image="ruby:2-alpine"
  fi

  # command is not yet supported
  if [ -z "$image" ]
  then
    echo "Command '$command' is not yet supported. Consider opening an Issue or Pull Request at https://github.com/voraciousdev/dx if you think it should be added."
    exit 0
  fi
fi

# run the command
if [ -z "$shell" ]
then
  docker run -it --rm -v `pwd`:/dxdir -w /dxdir "$image" "$@"
else
  docker run -it --rm -v `pwd`:/dxdir -w /dxdir "$image" sh
fi